{"version":3,"file":"index.js","sources":["../src/js/refs.js","../src/js/render-tasks.js","../src/js/handler.js","../src/main.js"],"sourcesContent":["// посилання на дом-елементи\n\nexport const refs = {\n    headerForm: document.querySelector('.header-form'),\n    tasksList: document.querySelector('.tasks-list'),\n};","import { refs } from \"./refs\";\n\n// функції для рендеру (малювання, очистка)\nexport function renderTaskList(tasks) {\nconst markup = tasks\n.map(\n    ({taskName, taskDescription}) => `  \n<li class=\"task-list-item\">\n      <button class=\"task-list-item-btn\">Delete</button>\n      <h3>taskName</h3>\n      <p>taskDescription</p>\n  </li>\n  `).join('');\n    refs.tasksList.innerHTML = markup;\n}","\n\n\n// логіка при сабміті\n\nimport { renderTaskList } from \"./render-tasks\";\n\nconst tasks = [];\n\nexport function onHeaderFormSubmit(evt) {\nevt.preventDefault();\n\nconst {taskName, taskDescription} = evt.target.elements;\nconst taskNameValue = taskName.value.trim();\nconst taskDescriptionValue = taskDescription.value.trim();\n\nif (taskNameValue === '' || taskDescriptionValue === '') {\n    alert('Всі поял мають бути заповнені');\n    return;\n    \n}\n\nconst task = {\n    taskName: taskNameValue,\n    taskDescription: taskDescriptionValue,\n};\n\ntasks.push(task);\n\nrenderTaskList(tasks);\nevt.target.reset();\n}\n\n","/*\n  Створи список справ.\n  На сторінці є два інпути які має вводиться назва і текст задачі.\n  Після натискання на кнопку \"Add\" завдання додається до списку #task-list.\n\n  У кожної картки має бути кнопка \"Delete\", щоб можна було\n  прибрати завдання зі списку.\n  Список із завданнями має бути доступним після перезавантаження сторінки.\n\n  Розмітка картки задачі\n  <li class=\"task-list-item\">\n      <button class=\"task-list-item-btn\">Delete</button>\n      <h3>Заголовок</h3>\n      <p>Текст</p>\n  </li>\n*/\n\nimport { onHeaderFormSubmit } from \"./js/handler\";\nimport { refs } from \"./js/refs\";\n\nrefs.headerForm.addEventListener('submit', onHeaderFormSubmit);\n"],"names":["refs","renderTaskList","tasks","markup","taskName","taskDescription","onHeaderFormSubmit","evt","taskNameValue","taskDescriptionValue","task"],"mappings":"ssBAEO,MAAMA,EAAO,CAChB,WAAY,SAAS,cAAc,cAAc,EACjD,UAAW,SAAS,cAAc,aAAa,CACnD,ECFO,SAASC,EAAeC,EAAO,CACtC,MAAMC,EAASD,EACd,IACG,CAAC,CAAC,SAAAE,EAAU,gBAAAC,CAAe,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMlC,EAAE,KAAK,EAAE,EACRL,EAAK,UAAU,UAAYG,CAC/B,CCPA,MAAMD,EAAQ,CAAA,EAEP,SAASI,EAAmBC,EAAK,CACxCA,EAAI,eAAc,EAElB,KAAM,CAAC,SAAAH,EAAU,gBAAAC,CAAe,EAAIE,EAAI,OAAO,SACzCC,EAAgBJ,EAAS,MAAM,OAC/BK,EAAuBJ,EAAgB,MAAM,OAEnD,GAAIG,IAAkB,IAAMC,IAAyB,GAAI,CACrD,MAAM,+BAA+B,EACrC,MAEJ,CAEA,MAAMC,EAAO,CACT,SAAUF,EACV,gBAAiBC,CACrB,EAEAP,EAAM,KAAKQ,CAAI,EAEfT,EAAeC,CAAK,EACpBK,EAAI,OAAO,OACX,CCXAP,EAAK,WAAW,iBAAiB,SAAUM,CAAkB"}